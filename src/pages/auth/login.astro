---
import Layout from '../../layouts/Layout.astro';
import HeaderPublic from '../../components/HeaderPublic.astro';
---

<Layout title="Connexion - Orbite">
  <HeaderPublic />
  
  <div class="min-h-screen bg-gradient-to-br from-purple-900 via-purple-800 to-indigo-900 flex items-center justify-center py-20">
    <div class="max-w-md w-full mx-4">
      <div class="bg-white rounded-2xl shadow-2xl p-8">
        <!-- Header -->
        <div class="text-center mb-8">
          <h1 class="text-2xl font-bold text-gray-800 mb-2">Connexion</h1>
          <p class="text-gray-600">Acc√©dez √† votre espace √©tudiant orbite</p>
        </div>
        
        <!-- Form -->
        <form id="login-form" class="space-y-6">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
              Email
            </label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
              placeholder="votre.nom@edu.univ-fcomte.fr"
            />
          </div>
          
          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
              Mot de passe
            </label>
            <input 
              type="password" 
              id="password" 
              name="password" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
              placeholder="Votre mot de passe"
            />
          </div>
          
          <button 
            type="submit"
            class="w-full bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-4 rounded-lg transition-colors duration-300 transform hover:scale-105"
          >
            Se connecter
          </button>
        </form>
        
        <!-- Register link -->
        <div class="text-center mt-6">
          <p class="text-gray-600">
            Pas encore de compte ? 
            <a href="/auth/register" class="text-purple-600 hover:text-purple-700 font-semibold">
              S'inscrire
            </a>
          </p>
        </div>
        
        <!-- Error/Success messages -->
        <div id="message" class="mt-4 hidden"></div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import PocketBase from 'pocketbase';
  
  const pb = new PocketBase('http://127.0.0.1:8090');
  
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('login-form') as HTMLFormElement;
    const messageDiv = document.getElementById('message') as HTMLDivElement;
    
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const email = formData.get('email') as string;
      const password = formData.get('password') as string;
      
      try {
        console.log('üöÄ Tentative de connexion...');
        
        const authData = await pb.collection('users').authWithPassword(email, password);
        console.log('‚úÖ Connexion r√©ussie:', authData);
        
        // V√©rifier si le compte est v√©rifi√©
        if (!authData.record.verified) {
          showMessage('‚è≥ Votre compte est en cours de v√©rification. Vous recevrez un email une fois votre compte activ√©.', 'warning');
          return;
        }
        
        showMessage('Connexion r√©ussie ! Redirection...', 'success');
        
        // Redirection vers le dashboard
        setTimeout(() => {
          window.location.href = '/dashboard';
        }, 1500);
        
      } catch (error: any) {
        console.error('‚ùå Erreur de connexion:', error);
        showMessage('Email ou mot de passe incorrect', 'error');
      }
    });
    
    function showMessage(text: string, type: 'success' | 'error' | 'warning') {
      const colorClasses = {
        success: 'bg-green-100 text-green-700 border border-green-300',
        error: 'bg-red-100 text-red-700 border border-red-300',
        warning: 'bg-yellow-100 text-yellow-700 border border-yellow-300'
      };
      
      messageDiv.className = `mt-4 p-4 rounded-lg ${colorClasses[type]}`;
      messageDiv.textContent = text;
      messageDiv.classList.remove('hidden');
    }
  });
</script>
