---
import Layout from "../layouts/Layout.astro"
---

<Layout title="Vérification Email - Orbite">
  <main class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
    <div class="bg-white p-8 rounded-xl shadow-lg w-full max-w-md">
      <div class="text-center mb-6">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Vérification Email</h1>
        <p class="text-gray-600">Vérification de votre adresse email...</p>
      </div>

      <div id="verification-status" class="text-center">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
        <p class="text-gray-600">Vérification en cours...</p>
      </div>

      <div id="verification-success" class="text-center hidden">
        <div class="text-green-500 mb-4">
          <svg class="w-16 h-16 mx-auto" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
        </div>
        <h2 class="text-xl font-semibold text-green-800 mb-2">Email vérifié avec succès !</h2>
        <p class="text-gray-600 mb-4">Votre compte est maintenant activé.</p>
        <a href="/login" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg transition-colors inline-block">
          Se connecter
        </a>
      </div>

      <div id="verification-error" class="text-center hidden">
        <div class="text-red-500 mb-4">
          <svg class="w-16 h-16 mx-auto" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
          </svg>
        </div>
        <h2 class="text-xl font-semibold text-red-800 mb-2">Erreur de vérification</h2>
        <p id="error-message" class="text-gray-600 mb-4">Le lien de vérification est invalide ou a expiré.</p>
        <div class="space-y-3">
          <a href="/register" class="block w-full bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg transition-colors text-center">
            Créer un nouveau compte
          </a>
          <button id="resend-verification" class="block w-full bg-gray-200 hover:bg-gray-300 text-gray-800 px-6 py-3 rounded-lg transition-colors">
            Renvoyer l'email de vérification
          </button>
        </div>
      </div>

      <!-- Formulaire pour renvoyer l'email (caché par défaut) -->
      <div id="resend-form" class="hidden mt-4">
        <div class="border-t pt-4">
          <h3 class="text-lg font-semibold mb-3">Renvoyer l'email de vérification</h3>
          <form id="resend-email-form">
            <input 
              type="email" 
              id="resend-email" 
              placeholder="Votre email @edu.univ-fcomte.fr"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mb-3"
              required
            >
            <button 
              type="submit"
              class="w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors"
            >
              Renvoyer
            </button>
          </form>
          <div id="resend-message" class="mt-3 text-sm"></div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  import PocketBase from "pocketbase"

  const pb = new PocketBase('https://pocketbaseprojet.alexandre-demling.fr')

  async function handleVerification() {
    const urlParams = new URLSearchParams(window.location.search)
    const token = urlParams.get('token')

    const statusDiv = document.getElementById('verification-status')
    const successDiv = document.getElementById('verification-success')
    const errorDiv = document.getElementById('verification-error')
    const errorMessage = document.getElementById('error-message')

    if (!token) {
      statusDiv?.classList.add('hidden')
      errorDiv?.classList.remove('hidden')
      if (errorMessage) {
        errorMessage.textContent = "Aucun token de vérification trouvé dans l'URL."
      }
      return
    }

    try {
      // Vérifier l'email avec PocketBase
      await pb.collection("users").confirmVerification(token)
      
      statusDiv?.classList.add('hidden')
      successDiv?.classList.remove('hidden')
    } catch (error) {
      console.error('Verification error:', error)
      statusDiv?.classList.add('hidden')
      errorDiv?.classList.remove('hidden')
      
      if (errorMessage) {
        if (error.message.includes('expired')) {
          errorMessage.textContent = "Le lien de vérification a expiré. Veuillez demander un nouveau lien."
        } else if (error.message.includes('invalid')) {
          errorMessage.textContent = "Le lien de vérification est invalide."
        } else {
          errorMessage.textContent = "Erreur lors de la vérification. Veuillez réessayer."
        }
      }
    }
  }

  // Gérer le renvoi d'email de vérification
  function setupResendVerification() {
    const resendButton = document.getElementById('resend-verification')
    const resendForm = document.getElementById('resend-form')
    const resendEmailForm = document.getElementById('resend-email-form')
    const resendMessage = document.getElementById('resend-message')

    resendButton?.addEventListener('click', () => {
      resendForm?.classList.toggle('hidden')
    })

    resendEmailForm?.addEventListener('submit', async (e) => {
      e.preventDefault()
      
      const emailInput = document.getElementById('resend-email') as HTMLInputElement
      const email = emailInput?.value

      if (!email) return

      // Vérifier le domaine email
      if (!email.endsWith('@edu.univ-fcomte.fr')) {
        if (resendMessage) {
          resendMessage.innerHTML = '<p class="text-red-600">Seuls les emails @edu.univ-fcomte.fr sont autorisés.</p>'
        }
        return
      }

      try {
        await pb.collection("users").requestVerification(email)
        if (resendMessage) {
          resendMessage.innerHTML = '<p class="text-green-600">Email de vérification envoyé avec succès !</p>'
        }
        emailInput.value = ''
      } catch (error) {
        console.error('Resend error:', error)
        if (resendMessage) {
          resendMessage.innerHTML = '<p class="text-red-600">Erreur lors de l\'envoi. Vérifiez que l\'email existe.</p>'
        }
      }
    })
  }

  // Initialiser quand la page se charge
  document.addEventListener('DOMContentLoaded', () => {
    handleVerification()
    setupResendVerification()
  })

  // Pour Astro (navigation côté client)
  document.addEventListener('astro:page-load', () => {
    handleVerification()
    setupResendVerification()
  })
</script>
</Layout>
